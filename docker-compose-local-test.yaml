version: "3.0"
services:
  app:
    build: .
    volumes:
      - ./:/app
    ports:
      - 8000:8000
    container_name: my_back_end_local
    image: "my_back_end_local:${API_VERSION}"
    restart: unless-stopped
    environment:
      - DB_HOST=db_app
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - TG_URL=${TG_URL}
      - TG_TOKEN=${TG_TOKEN}
      - CHANNEL_ID=${CHANNEL_ID}
      - ADMIN_CHANNEL_ID=${ADMIN_CHANNEL_ID}
      - DIGISELLER_ID=${DIGISELLER_ID}
      - DIGISELLER_TOKEN=${DIGISELLER_TOKEN}
      - CHECK_CODE_URL=https://api.digiseller.ru/api/purchases/unique-code/{unique_code}?token={token}
    depends_on:
      - db_app
    networks:
      - custom
  db_app:
    container_name: "db_app-test"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - alex_pgdata:/var/lib/postgresql/data
    networks:
      - custom
  # sellerbot:
  #   build:
  #     context: ./sellerbot
  #     dockerfile: Dockerfile
  #   container_name: sellerbot
  #   image: "sellerbot:${API_VERSION}"
  #   restart: unless-stopped
  #   environment:
  #     - DB_HOST=db_app
  #     - DB_USER=${DB_USER}
  #     - DB_PASS=${DB_PASS}
  #     - DB_NAME=${DB_NAME}
  #     - DB_PORT=${DB_PORT}
  #     - TG_URL=${TG_URL}
  #     - TG_TOKEN=${TG_TOKEN}
  #     - ADMIN_CHANNEL_ID=${ADMIN_CHANNEL_ID}
  #   depends_on:
  #     - db_app
networks:
  custom:
    driver: bridge
volumes:
  alex_pgdata:
    external: true
